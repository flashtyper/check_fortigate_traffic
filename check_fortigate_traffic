#!/usr/bin/perl

use strict;
use warnings;
use Net::SNMP;
use Data::Dumper;
use Monitoring::Plugin;
use Getopt::Std;


####    GLOBAL VARS    ####
my %opts;
getopt('hcv', \%opts);
my $host = $opts{h};
my $community = $opts{c};
my $version = $opts{v};
my %Ifstats;


#  create SNMP agent
my $snmp = Net::SNMP->session(
        Hostname => $host,
        Community => $community,
        Version => $version,
);

#  create monitoring plugin
my $plugin = Monitoring::Plugin->new(
        shortname => uc("check_network"),
);


####   LETS GO    ####
main();

sub main {
    network();
}

#  if something weird happens
sub _exit {
  $plugin->plugin_exit(CRITICAL,"no response snmp");
}

#  define base oids
sub network {
  my $NET = {
    IfName          => '.1.3.6.1.2.1.31.1.1.1.1',
    IfSpeed         => '.1.3.6.1.2.1.2.2.1.5',
    IfHighSpeed     => '.1.3.6.1.2.1.31.1.1.1.15',#HC
    IfHCInRate      => '.1.3.6.1.2.1.31.1.1.1.6', #HC
    IfHCOutRate     => '.1.3.6.1.2.1.31.1.1.1.10', #HC
    IfInErrRate     => '.1.3.6.1.2.1.2.2.1.14',
    IfOutErrRate    => '.1.3.6.1.2.1.2.2.1.20',
    IfInDiscRate    => '.1.3.6.1.2.1.2.2.1.13',
    IfOutDiscRate   => '.1.3.6.1.2.1.2.2.1.19',
    IfAdminStatus   => '.1.3.6.1.2.1.2.2.1.7',
    IfOperStatus    => '.1.3.6.1.2.1.2.2.1.8',
  };

  #  for each key in $NET call generate_hash
  #  for each key in $NET call generate_hash
  foreach my $key (keys %$NET) {
    generate_Hash($key, $NET->{$key});
  }
  #  if everything is done combine all together for icinga perf data
  perf_Data();
  $plugin->plugin_exit(OK, "everything is fine");

}

#  walk the base oid
sub generate_Hash {
  my ($key, $oid) = @_;
  my $t = $snmp->get_table($oid);

  #  if snmpwalk fails go to _exit()
  if(!defined $t){
    _exit();
  }

  #  for each respose get the last number (which is the interface index) and combine this in a hash
  foreach my $k (sort keys %$t) {
    if($k =~ /^$oid\.(\d+)/){
      $Ifstats{$1}{$key} = $t->{$k};
    }
  }
}

#  Make the Hash great again
sub perf_Data {
  foreach my $k (sort keys %Ifstats) {
    my $IfName = $Ifstats{$k}->{'IfName'};
    delete $Ifstats{$k}->{'IfName'};

    foreach my $t (sort keys %{$Ifstats{$k}}) {
      $plugin->add_perfdata(
        label => $IfName . "_" . $t,
        value => $Ifstats{$k}->{$t},
      );
    }
  }
}
